[tox]
envlist = py{37,38,39}
toxworkdir=../.tox
download=true

[build-system]
requires = ["setuptools >= 35.0.2", "wheel >= 0.29.0"]
build-backend = "setuptools.build_meta"

[pytest]
python_files = tests.py test_*.py *_tests.py

[checkersenv]
deps =
    pycodestyle
    flake8
    black
    bandit

[developmentenv]
deps = -r../requirements/development.txt

[pycodestyle]
max-line-length = 82
exclude =
    .git,
    .tox,
    __pycache__,
    migrations,
    resources,
ignore =
    E501,

[flake8]
max-line-length = 82
exclude =
    .git,
    .tox,
    __pycache__,
    migrations,
    resources,
ignore =
    E501,
    F401,

[black]
max-line-length = 82
exclude =
    .git,
    .tox,
    __pycache__,
    migrations,
    resources,

[testenv:py{37,38,39}-pycodestyle]
description = Runs pycodestyle style checker. See: https://github.com/pycqa/pycodestyle
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = pycodestyle .

[testenv:py{37,38,39}-flake8]
description = Runs flake8 style checker. See: https://github.com/pycqa/flake8
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = flake8 .

[testenv:py{37,38,39}-black-check]
description = Runs black to check the code style. See: https://github.com/psf/black
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = black . --check --diff

[testenv:py{37,38,39}-black-format]
description = Runs black to reformat code to style guide. See: https://github.com/psf/black
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = black .

[testenv:py{37,38,39}-bandit]
description = Runs bandit security linter. See: https://github.com/pycqa/bandit
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
    py310: {toxworkdir}/.py310-checkers
skip_install = true
deps = {[checkersenv]deps}
commands = bandit -x ./__pycache__,*tests*,./venv -r {toxinidir}

[testenv:py{37,38,39}-pytest]
description = Runs pytest. See: https://pytest-django.readthedocs.io/en/latest/
envdir =
    py37: {toxworkdir}/.py37-testing
    py38: {toxworkdir}/.py38-testing
    py39: {toxworkdir}/.py39-testing
    py310: {toxworkdir}/.py310-testing
skip_install = true
deps =
    {[developmentenv]deps}
    pytest
commands = pytest .

[testenv:py{37,38,39}-build]
description = Generate Python Version Specific Wheel File
envdir =
    py37: {toxworkdir}/.py37-build
    py38: {toxworkdir}/.py38-build
    py39: {toxworkdir}/.py39-build
skip_install = true
deps =
    {[developmentenv]deps}
commands =
    py37: python setup.py bdist_wheel --python-tag=py37
    py38: python setup.py bdist_wheel --python-tag=py38
    py39: python setup.py sdist bdist_wheel --python-tag=py39

[testenv:py{37,38,39}-pyinstaller]
description = Generate Python Version Specific Executable
envdir =
    py37: {toxworkdir}/.py37-build
    py38: {toxworkdir}/.py38-build
    py39: {toxworkdir}/.py39-build
skip_install = true
deps =
    {[developmentenv]deps}
    pyinstaller
commands =
    py37: pyinstaller main.py -n Table2XSV-py37 --onefile --hidden-import="neobolt.packstream.packer" --hidden-import="neobolt.packstream.unpacker" --hidden-import="neobolt.bolt" --hidden-import="neobolt.bolt.io"
    py38: pyinstaller main.py -n Table2XSV-py38 --onefile --hidden-import="neobolt.packstream.packer" --hidden-import="neobolt.packstream.unpacker" --hidden-import="neobolt.bolt" --hidden-import="neobolt.bolt.io"
    py39: pyinstaller main.py -n Table2XSV-py39 --onefile --hidden-import="neobolt.packstream.packer" --hidden-import="neobolt.packstream.unpacker" --hidden-import="neobolt.bolt" --hidden-import="neobolt.bolt.io"
