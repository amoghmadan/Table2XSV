[tox]
envlist = py{37,38,39}
toxworkdir=.tox
download=true

[pytest]
testpaths = tests
python_files = tests.py test_*.py *_tests.py

[csvenv]
deps =
    pandas

[excelenv]
deps =
    odfpy
    openpyxl
    pyxlsb
    xlrd

[mysqlenv]
deps =
    mysqlclient

[neo4jenv]
deps =
    neo4j

[sqliteenv]
deps =

[allenv]
deps =
    {[csvenv]deps}
    {[excelenv]deps}
    {[mysqlenv]deps}
    {[neo4jenv]deps}
    {[sqliteenv]deps}

[installerenv]
deps =
    pyinstaller

[testingenv]
deps =
    pytest
    coverage

[checkerenv]
deps =
    pycodestyle
    flake8
    black
    bandit

[pycodestyle]
max-line-length = 88
exclude =
    .coverage,
    .eggs,
    .git,
    .tox,
    .pytest_cache,
    build,
    coverage,
    dist,
    venv,
    __pycache__,
ignore =
    E501,

[flake8]
max-line-length = 88
exclude =
    .eggs,
    .git,
    .tox,
    build,
    coverage,
    dist,
    venv,
    __pycache__,
ignore =
    E501,
    F401,

[black]
max-line-length = 88
exclude =
    .eggs,
    .git,
    .tox,
    build,
    coverage,
    dist,
    venv,
    __pycache__,

[testenv:py{37,38,39}-pycodestyle]
description = Runs pycodestyle style checker. See: https://github.com/pycqa/pycodestyle
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = pycodestyle .

[testenv:py{37,38,39}-flake8]
description = Runs flake8 style checker. See: https://github.com/pycqa/flake8
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = flake8 .

[testenv:py{37,38,39}-black-check]
description = Runs black to check the code style. See: https://github.com/psf/black
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black . --check --diff

[testenv:py{37,38,39}-black-format]
description = Runs black to reformat code to style guide. See: https://github.com/psf/black
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black .

[testenv:py{37,38,39}-bandit]
description = Runs bandit security linter. See: https://github.com/pycqa/bandit
envdir =
    py37: {toxworkdir}/.py37-checkers
    py38: {toxworkdir}/.py38-checkers
    py39: {toxworkdir}/.py39-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = bandit -x ./.eggs,./.git,./.tox,./build,./coverage,./dist,./venv,./__pycache__,*tests* -r {toxinidir}

[testenv:py{37,38,39}-pytest]
description = Runs pytest. See: https://docs.pytest.org/en/6.2.x/
envdir =
    py37: {toxworkdir}/.py37-testing
    py38: {toxworkdir}/.py38-testing
    py39: {toxworkdir}/.py39-testing
skip_install = true
deps =
    {[allenv]deps}
    {[testingenv]deps}
commands = pytest

[testenv:py{37,38,39}-pytest-cov]
description = Runs coverage. See: https://coverage.readthedocs.io/en/6.0.2/
envdir =
    py37: {toxworkdir}/.py37-testing
    py38: {toxworkdir}/.py38-testing
    py39: {toxworkdir}/.py39-testing
skip_install = true
deps =
    {[allenv]deps}
    {[testingenv]deps}
commands =
    coverage run -m pytest
    coverage html -d coverage

[testenv:py{37,38,39}-build]
description = Build wheels. https://wheel.readthedocs.io/en/stable/
envdir =
    py37: {toxworkdir}/.py37-build
    py38: {toxworkdir}/.py38-build
    py39: {toxworkdir}/.py39-build
skip_install = true
deps = {[allenv]deps}
commands =
    py37: python setup.py bdist_wheel --python-tag=py37
    py38: python setup.py bdist_wheel --python-tag=py38
    py39: python setup.py sdist bdist_wheel --python-tag=py39

[testenv:py{37,38,39}-build-exe]
description = Build executable with PyInstaller. https://pyinstaller.readthedocs.io/en/stable/
envdir =
    py37: {toxworkdir}/.py37-build-exe
    py38: {toxworkdir}/.py38-build-exe
    py39: {toxworkdir}/.py39-build-exe
skip_install = true
deps =
    {[allenv]deps}
    {[installerenv]deps}
commands =
    py37: pyinstaller main.py -n Table2XSV-py37 -F --collect-all=table2xsv --hidden-import='pandas' --hidden-import='neo4j' --hidden-import='neobolt.packstream.packer' --hidden-import='neobolt.packstream.unpacker' --hidden-import='neobolt.bolt' --hidden-import='neobolt.bolt.io'
    py38: pyinstaller main.py -n Table2XSV-py38 -F --collect-all=table2xsv --hidden-import='pandas' --hidden-import='neo4j' --hidden-import='neobolt.packstream.packer' --hidden-import='neobolt.packstream.unpacker' --hidden-import='neobolt.bolt' --hidden-import='neobolt.bolt.io'
    py39: pyinstaller main.py -n Table2XSV-py39 -F --collect-all=table2xsv --hidden-import='pandas' --hidden-import='neo4j' --hidden-import='neobolt.packstream.packer' --hidden-import='neobolt.packstream.unpacker' --hidden-import='neobolt.bolt' --hidden-import='neobolt.bolt.io'
